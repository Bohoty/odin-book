{"version":3,"sources":["store/actions/userActions/authActions.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/user/auth/SignIn.js","components/user/auth/SignUp.js","components/user/UserProfile.js","components/posts/LikesListModal.js","components/posts/Post.js","components/posts/PostsList.js","store/actions/postsAction.js","components/Home.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postsReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["getResponse","url","user","config","method","headers","data","JSON","stringify","axios","signIn","dispatch","getState","a","response","status","type","connect","signOut","props","handleClick","e","preventDefault","window","location","reload","id","className","to","onClick","href","data-target","SignedOutLinks","state","links","auth","signedUserToken","SignIn","email","password","handleChange","setState","target","value","handleSubmit","console","log","this","err","signInError","errorMsg","Style","onSubmit","htmlFor","required","onChange","Component","SignUp","name","signUp","signUpError","UserProfile","match","params","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","LikesListModal","subtitle","React","useState","modalIsOpen","setIsOpen","isOpen","onAfterOpen","style","color","onRequestClose","closeModal","contentLabel","ref","_subtitle","Post","likeButtonColor","likeButtonState","commentContent","commentSectionIsOpen","handleLikeClick","handleNewCommentClick","openLikesList","likesListIsOpen","closeLikesList","handleCommentChange","authorName","createdAt","Title","placeholder","PostsList","getAllPosts","posts","calendarStrings","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","postsList","map","post","key","_id","calendar","text","Authorization","Home","App","sidenav","document","querySelector","M","Sidenav","init","exact","path","component","Boolean","hostname","initState","signedUserName","signedUserId","signedUserEmail","authReducer","action","errors","token","message","postsReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","presistedState","serializedState","localStorage","getItem","parse","loadFromLocalStorage","store","createStore","applyMiddleware","thunk","subscribe","setItem","saveToLocalStorage","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ad03e386.chunk.js","sourcesContent":["import axios from 'axios';\nconst getResponse = (url, user) => {\n  const data = JSON.stringify(user);\n  const config = {\n    method: 'post',\n    url,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data: data,\n  };\n  return axios(config);\n};\n\nexport const signIn = (user) => {\n  return async (dispatch, getState) => {\n    const url = 'https://cool-odin-book.herokuapp.com/login';\n    let response;\n    try {\n      response = await getResponse(url, user);\n    } catch (err) {\n      response = err.response;\n    }\n    switch (response.status) {\n      case 200:\n        dispatch({ type: 'LOGIN_SUCCESS', response });\n        break;\n      case 400:\n        dispatch({ type: 'LOGIN_ERROR', response });\n        break;\n      default:\n        dispatch({ type: 'UNDEFIEND' });\n    }\n  };\n};\n\nexport const signUp = (user) => {\n  return async (dispatch, getState) => {\n    const url = 'https://cool-odin-book.herokuapp.com/users';\n    let response;\n    try {\n      response = await getResponse(url, user);\n    } catch (err) {\n      response = err.response;\n    }\n    switch (response.status) {\n      case 200:\n        dispatch({ type: 'SIGNUP_SUCCESS', response });\n        break;\n      case 400:\n        dispatch({ type: 'SIGNUP_ERROR', response });\n        break;\n      default:\n        dispatch({ type: 'UNDEFIEND' });\n    }\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch, getState) => {\n    dispatch({ type: 'SIGNOUT' });\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/userActions/authActions';\nfunction SignedInLinks(props) {\n  const handleClick = async (e) => {\n    e.preventDefault();\n    await props.signOut();\n    window.location.reload(false);\n  };\n  return (\n    <div>\n      <ul id='nav-mobile' className='right hide-on-med-and-down'>\n        <li>\n          <Link to='#' onClick={handleClick}>\n            Sign Out\n          </Link>\n        </li>\n      </ul>\n\n      <ul id='slide-out' className='sidenav'>\n        <li>\n          <Link to='#' className='sidenav-close' onClick={handleClick}>\n            Sign Out\n          </Link>\n        </li>\n      </ul>\n      <a href='/' data-target='slide-out' className='sidenav-trigger'>\n        <i className='material-icons'>menu</i>\n      </a>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nfunction SignedOutLinks() {\n  return (\n    <div>\n      <ul id='nav-mobile' className='right hide-on-med-and-down'>\n        <li>\n          <Link to='/signin'>Sign In</Link>\n        </li>\n        <li>\n          <Link to='/signup'>Sign Up</Link>\n        </li>\n      </ul>\n\n      <ul id='slide-out' className='sidenav'>\n        <li>\n          <Link to='/signin' className=\"sidenav-close\">Sign In</Link>\n        </li>\n        <li>\n          <Link to='/signup' className=\"sidenav-close\">Sign Up</Link>\n        </li>\n      </ul>\n      <a href='/' data-target='slide-out' className='sidenav-trigger'>\n        <i className='material-icons'>menu</i>\n      </a>\n    </div>\n  );\n}\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nfunction Navbar(props) {\n  const token = props.auth.signedUserToken;\n  let links;\n  if (token) links = <SignedInLinks />;\n  else links = <SignedOutLinks />;\n  return (\n    <nav>\n      <div className='nav-wrapper green lighten-1'>\n        <div className='container'>\n          <div className=''>\n            <Link to='/' className='brand-logo offset-l2'>\n              Odinbook\n            </Link>\n          </div>\n          <div className='col offset-l2'>{links}</div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nconst mapStateTpProps = (state) => {\n  return {\n    ...state,\n  };\n};\nexport default connect(mapStateTpProps)(Navbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../../store/actions/userActions/authActions';\nimport { Link, Redirect } from 'react-router-dom';\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    await this.props.signIn(this.state);\n    window.location.reload(false);\n  };\n  render() {\n    console.log(this.props);\n    const token = this.props.state.auth.signedUserToken;\n    const loggedIn = token !== null;\n    if (loggedIn) return <Redirect to='/' />;\n    const err = this.props.state.auth.signInError;\n    console.log(this.props.state);\n    const errorMsg = err ? (\n      <div>\n        <div className='center red-text'>\n          {this.props.state.auth.signInError}\n        </div>\n      </div>\n    ) : null;\n    return (\n      <div>\n        <div className='container'>\n          <div className='card z-depth-1'>\n            <div className='card-title'>\n              <h4 Style='position:relative; left: 22px; top:22px'>Sign In</h4>\n            </div>\n            <div className='card-content'>\n              <form onSubmit={this.handleSubmit}>\n                <div className='input-field'>\n                  <label htmlFor='email'>Email</label>\n                  <input\n                    required\n                    id='email'\n                    type='email'\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className='input-field'>\n                  <label htmlFor='password'>Password</label>\n                  <input\n                    required\n                    id='password'\n                    type='password'\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <button className='btn green lighten-1'>Sign In</button>\n              </form>\n              {errorMsg}\n              <div className='center'>\n                <p>\n                  <Link to='/signup'>or create new account</Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (user) => dispatch(signIn(user)),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    state,\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../../store/actions/userActions/authActions';\nimport { signIn } from '../../../store/actions/userActions/authActions';\n\nclass SignUp extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    await this.props.signUp(this.state);\n    await this.props.signIn({\n      email: this.state.email,\n      password: this.state.password,\n    });\n    window.location.reload(false);\n  };\n  render() {\n    const token = this.props.state.auth.signedUserToken;\n    const loggedIn = token !== null;\n    if (loggedIn) return <Redirect to='/' />;\n    const err = this.props.state.auth.signUpError;\n    const errorMsg = err ? (\n      <div>\n        <div className='center red-text'>\n          {this.props.state.auth.signUpError}\n        </div>\n      </div>\n    ) : null;\n    return (\n      <div>\n        <div className='container'>\n          <div className='card'>\n            <div className='card-title'>\n              <h4 Style='position:relative; left: 22px; top:22px'>\n                Create New Account\n              </h4>\n            </div>\n            <div className='card-content'>\n              <form onSubmit={this.handleSubmit}>\n                <div className='input-field'>\n                  <label htmlFor='name'>Name</label>\n                  <input id='name' type='text' onChange={this.handleChange} />\n                </div>\n                <div className='input-field'>\n                  <label htmlFor='email'>Email</label>\n                  <input id='email' type='email' onChange={this.handleChange} />\n                </div>\n                <div className='input-field'>\n                  <label htmlFor='password'>Password</label>\n                  <input\n                    id='password'\n                    type='password'\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <button className='btn green lighten-1'>Sign Up</button>\n              </form>\n              {errorMsg}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (user) => dispatch(signUp(user)),\n    signIn: (user) => dispatch(signIn(user)),\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    state,\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\n\nexport default class UserProfile extends Component {\n  render() {\n    const id = this.props.match.params.id;\n    console.log(this.props);\n    return (\n      <div>\n        <h1>UserProfile {id}</h1>\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '35%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('body');\n\nfunction LikesListModal(props) {\n  var subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    props.closeModal();\n    setIsOpen(false);\n  }\n\n  if (props.isOpen && !modalIsOpen) openModal();\n  return (\n    <div Style=' align-self: center; max-width:21px'>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel='LikesListModal'\n      >\n        <span ref={(_subtitle) => (subtitle = _subtitle)}></span>\n        <div className=''>\n          <span Style='font-size:20px;'>Likes</span>\n          <span className='hide-on-med-and-down'>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          </span>\n          <span className='hide-on-large-only hide-on-small-only'>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          </span>\n          <span className='hide-on-med-and-up'>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          </span>\n          <hr Style='opacity: 0.5;'></hr>\n          <div Style='font-size:20px'>\n            <a href='/' className=' indigo-text darken-4'>\n              bullshit\n            </a>\n            <br />\n            <a href='/' className='indigo-text darken-4'>\n              bullshit\n            </a>\n            <br />\n            <a href='/' className='indigo-text darken-4'>\n              bullshit\n            </a>\n            <br />\n            <a href='/' className='indigo-text darken-4'>\n              bullshit\n            </a>\n            <br />\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default LikesListModal;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LikesListModal from './LikesListModal';\n// import moment from 'moment';\n\nclass Post extends Component {\n  state = {\n    likeButtonColor: 'grey-text text-lighten-1',\n    likeButtonState: 'Like',\n    modalIsOpen: false,\n    commentContent: '',\n    commentSectionIsOpen: false,\n  };\n  handleLikeClick = (e) => {\n    e.preventDefault();\n    this.setState({\n      likeButtonColor:\n        this.state.likeButtonColor === 'grey-text text-lighten-1'\n          ? 'green-text text-lighten-1'\n          : 'grey-text text-lighten-1',\n      likeButtonState:\n        this.state.likeButtonState === 'Like' ? 'Unlike' : 'Like',\n    });\n  };\n\n  handleNewCommentClick = (e) => {\n    e.preventDefault();\n    this.setState({\n      commentSectionIsOpen: true,\n    });\n  };\n\n  openLikesList = () => {\n    this.setState({\n      likesListIsOpen: true,\n    });\n  };\n  closeLikesList = () => {\n    this.setState({\n      likesListIsOpen: false,\n    });\n  };\n\n  handleCommentChange = (e) => {\n    this.setState({\n      commentContent: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div id='post' className='row'>\n        <div className='col s12 m6 l6 push-l3 push-m3'>\n          <div className='card'>\n            <div className='card-content'>\n              <div className='row'>\n                <div className='card-title black-text col s9'>\n                  <div>\n                    <span>{this.props.authorName}</span>\n                  </div>\n                  <p className='grey-text' Style='font-size:15px;'>\n                    Posted {this.props.createdAt}\n                  </p>\n                </div>\n              </div>\n\n              <p Style='font-size: 18px;'>{this.props.content}</p>\n              <div className='right'>\n                <a onClick={this.openLikesList} href='#'>\n                  <span Style='font-size:14px' className='grey-text lighten-1'>\n                    12 likes &nbsp;&nbsp;\n                  </span>\n                </a>\n                <a href=''>\n                  <span Style='font-size:14px' className='grey-text lighten-1'>\n                    8 comments\n                  </span>\n                </a>\n              </div>\n            </div>\n\n            <div className='card-action' Style=''>\n              <a\n                href='#'\n                className={this.state.likeButtonColor}\n                onClick={this.handleLikeClick}\n                Title={this.state.likeButtonState}\n              >\n                <i\n                  className='material-icons'\n                  onClick={this.handleLikeClick}\n                  Title={this.state.likeButtonState}\n                >\n                  thumb_up\n                </i>\n                <span Style='text-transform: none !important; position:relative; bottom: 5px'>\n                  {' '}\n                  Like\n                </span>\n              </a>\n              <a\n                href='#'\n                className='blue-text lighten-1'\n                onClick={this.handleNewCommentClick}\n              >\n                <i Style='' className='material-icons'>\n                  short_text\n                </i>\n                <span Style='text-transform: none !important; position:relative; bottom: 5px'>\n                  {' '}\n                  Comment\n                </span>\n              </a>\n              {this.state.commentSectionIsOpen ? (\n                <div id='new-comment'>\n                  <textarea\n                    className='materialize-textarea'\n                    name=''\n                    id='commentTextArea'\n                    placeholder='Write a comment...'\n                    onChange={this.handleCommentChange}\n                  ></textarea>\n                  <button\n                    className='btn-small'\n                    Style='visibility:hidden;'\n                  ></button>\n                  <button\n                    Style='text-transform: none'\n                    className='btn-small   right green lighten-1'\n                  >\n                    Comment\n                  </button>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n\n        <LikesListModal\n          isOpen={this.state.likesListIsOpen}\n          closeModal={this.closeLikesList}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Post from './Post';\nimport Moment from 'react-moment';\nimport { getAllPosts } from '../../store/actions/postsAction';\nexport class PostsList extends Component {\n  render() {\n    this.props.getAllPosts();\n    const posts = this.props.posts;\n    const calendarStrings = {\n      lastDay: '[Yesterday at] LT',\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      lastWeek: '[last] dddd [at] LT',\n      nextWeek: 'dddd [at] LT',\n      sameElse: 'L',\n    };\n    const postsList =\n      posts &&\n      posts.map((post) => {\n        return (\n          <Post\n            key={post._id}\n            authorName={post.user.name}\n            createdAt={\n              <Moment calendar={calendarStrings}>{post.createdAt}</Moment>\n            }\n            content={post.text}\n          />\n        );\n      });\n    return <div>{postsList}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.post.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllPosts: () => dispatch(getAllPosts()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsList);\n","import axios from 'axios';\nexport const getAllPosts = () => {\n  return async (dispatch, getState) => {\n    const url = 'https://cool-odin-book.herokuapp.com/posts';\n    const state = getState();\n    const config = {\n      method: 'get',\n      url,\n      headers: {\n        Authorization: 'Bearer ' + state.auth.signedUserToken,\n        'Content-Type': 'application/json',\n      },\n    };\n    let response;\n    try {\n      response = await axios(config);\n    } catch (err) {\n      response = err.response;\n    }\n    switch (response.status) {\n      case 200:\n        dispatch({ type: 'GET_ALL_POSTS_SUCCESS', posts: response.data });\n        break;\n      default:\n        dispatch({ type: 'GET_ALL_POSTS_FAILED_UNAUTHORIZED' });\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PostsList from './posts/PostsList';\nexport class Home extends Component {\n  render() {\n    return (\n      <div>\n        <PostsList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport SignIn from './components/user/auth/SignIn';\nimport SignUp from './components/user/auth/SignUp';\nimport UserProfile from './components/user/UserProfile';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nclass App extends Component {\n  componentDidMount() {\n    let sidenav = document.querySelector('#slide-out');\n    M.Sidenav.init(sidenav, {});\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Navbar />\n        </div>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/SignIn' component={SignIn} />\n          <Route exact path='/SignUp' component={SignUp} />\n          <Route exact path='/UserProfile/:id' component={UserProfile} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  signedUserName: '',\n  signedUserId: '',\n  signedUserToken: null,\n  signedUserEmail: '',\n  signInError: null,\n  signUpError: null,\n};\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'SIGNUP_SUCCESS':\n      return {\n        ...state,\n        signedUserName: action.response.data.name,\n        signedUserEmail: action.response.data.email,\n        signedUserId: action.response.data._id,\n        signUpError: null,\n      };\n    case 'SIGNUP_ERROR':\n      return {\n        ...state,\n        signUpError: action.response.data.errors[0],\n      };\n    case 'LOGIN_SUCCESS':\n      console.log(action.response);\n      return {\n        ...state,\n        signedUserEmail: action.response.data.user.email,\n        signedUserId: action.response.data.user._id,\n        signedUserName: action.response.data.user.name,\n        signedUserToken: action.response.data.token,\n      };\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        signInError: action.response.data.message,\n      };\n    case 'SIGNOUT':\n      return {\n        ...initState,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  posts: null,\n};\nconst postsReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'GET_ALL_POSTS_SUCCESS':\n      return {\n        ...state,\n        posts: action.posts,\n      };\n    default:\n      return {\n        posts: null,\n      };\n  }\n};\nexport default postsReducer;\n","import { combineReducers } from 'redux';\nimport { default as authReducer } from './authReducer';\nimport postsReducer from './postsReducer';\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  post: postsReducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nfunction saveToLocalStorage(state) {\n  const serializedState = JSON.stringify(state);\n  localStorage.setItem('state', serializedState);\n}\n\nfunction loadFromLocalStorage() {\n  const serializedState = localStorage.getItem('state');\n  if (serializedState === null) return undefined;\n  return JSON.parse(serializedState);\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst presistedState = loadFromLocalStorage();\nconst store = createStore(\n  rootReducer,\n  presistedState,\n  composeEnhancers(applyMiddleware(thunk))\n);\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}